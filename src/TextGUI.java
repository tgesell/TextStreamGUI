import com.jgoodies.forms.layout.*;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintStream;

public class TextGUI {
    private JPanel mainPanel;
    private JTextArea outputTextArea;
    private JTextField inputField;
    private JPanel inputPanel;
    private JLabel label1;
    private JScrollPane outputScrollPane;
    private StringBuffer input;
    private int inputPointer;

    public final PrintStream out;
    public final InputStream in;

    private final JFrame mainFrame;

    public TextGUI(String title) {
        out = new PrintStream(new OutputStream() {
            @Override
            public void write(int b) {
                char c = (char) b;
                String value = Character.toString(c);
                outputTextArea.append(value);

            }
        });
        System.setOut(out);
        inputPointer = 0;
        StringBuffer input = new StringBuffer();
        in = new InputStream() {

            @Override
            public int read() {
                //System.err.print(inputPointer + ": ");
                boolean dataToRead = false;
                if (inputPointer > 0 && input.charAt(inputPointer - 1) == '\n') {
                    input.delete(0, inputPointer);
                    inputPointer = 0;
                    //System.err.println(">>>");
                    return -1;
                }

                while (!dataToRead) {
                    if (input.length() > inputPointer)// && input[input.length - 1] != 0)
                        dataToRead = true;
                    try {
                        Thread.sleep(10);
                    } catch (InterruptedException e) {
                        throw new RuntimeException(e);
                    }
                }
                //System.err.println(input);
                return input.charAt(inputPointer++);
            }
        };
        System.setIn(in);
        inputField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                //char c = e.getKeyChar();
                //if (c != KeyEvent.CHAR_UNDEFINED)
                //    input.append(e.getKeyChar());
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    //System.err.println(input);
                    char[] characters = inputField.getText().toCharArray();
                    for (char c : characters) {
                        input.append(c);
                    }
                    input.append(e.getKeyChar());
                    inputField.setText("");
                }
                super.keyReleased(e);
            }
        });

        mainFrame = new JFrame(title);
        mainFrame.setContentPane(mainPanel);
        mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        mainFrame.pack();
        mainFrame.setVisible(true);
    }


    public TextGUI() {
        this("TextGUI");
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:58dlu:noGrow,fill:d:grow", "center:522px:noGrow,top:44dlu:noGrow"));
        mainPanel.setPreferredSize(new Dimension(800, 600));
        outputScrollPane = new JScrollPane();
        outputScrollPane.setPreferredSize(new Dimension(800, 500));
        CellConstraints cc = new CellConstraints();
        mainPanel.add(outputScrollPane, cc.xy(3, 1, CellConstraints.FILL, CellConstraints.FILL));
        outputScrollPane.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), null, TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        outputTextArea = new JTextArea();
        outputTextArea.setEditable(false);
        outputTextArea.setPreferredSize(new Dimension(800, 500));
        outputScrollPane.setViewportView(outputTextArea);
        inputPanel = new JPanel();
        inputPanel.setLayout(new FormLayout("fill:67px:grow", "center:d:noGrow"));
        inputPanel.setMinimumSize(new Dimension(0, 0));
        inputPanel.setPreferredSize(new Dimension(200, 500));
        mainPanel.add(inputPanel, cc.xyw(1, 1, 2, CellConstraints.DEFAULT, CellConstraints.TOP));
        label1 = new JLabel();
        label1.setText("Label");
        inputPanel.add(label1, cc.xy(1, 1, CellConstraints.DEFAULT, CellConstraints.TOP));
        inputField = new JTextField();
        inputField.setPreferredSize(new Dimension(600, 100));
        mainPanel.add(inputField, cc.xy(3, 2, CellConstraints.FILL, CellConstraints.DEFAULT));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

    public void clear() {
        outputTextArea.setText("");
    }

    public void hideInputPanel() {
        inputPanel.setVisible(false);
        inputPanel.setSize(0, 500);

        outputTextArea.setSize(800, 500);
        outputScrollPane.setSize(800, 500);

        FormLayout layout = (FormLayout) mainPanel.getLayout();

        ColumnSpec cs1 = layout.getColumnSpec(1);
        ColumnSpec cs3 = layout.getColumnSpec(3);
        ColumnSpec cs1New = new ColumnSpec(cs1.getDefaultAlignment(), Sizes.ZERO, 0);
        ColumnSpec cs3New = new ColumnSpec(cs3.getDefaultAlignment(), Sizes.DEFAULT, 1);

        layout.setColumnSpec(1, cs1New);
        layout.setColumnSpec(3, cs3New);
        //layout.removeColumn(1);

        //layout.removeColumn(2);
        //layout.removeColumn(3);

        mainPanel.revalidate();
        //mainPanel.repaint();
        //mainFrame.revalidate();
        //mainFrame.repaint();
        //mainFrame.pack();

    }

}


